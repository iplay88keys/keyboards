   1               		.file	"keymap_plain.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.action_get_macro,"ax",@progbits
  11               	.global	action_get_macro
  13               	action_get_macro:
  14               	.LFB103:
  15               		.file 1 "keymap_plain.c"
   1:keymap_plain.c **** /*
   2:keymap_plain.c **** Copyright 2015 Jun Wako <wakojun@gmail.com>
   3:keymap_plain.c **** 
   4:keymap_plain.c **** This program is free software: you can redistribute it and/or modify
   5:keymap_plain.c **** it under the terms of the GNU General Public License as published by
   6:keymap_plain.c **** the Free Software Foundation, either version 2 of the License, or
   7:keymap_plain.c **** (at your option) any later version.
   8:keymap_plain.c **** 
   9:keymap_plain.c **** This program is distributed in the hope that it will be useful,
  10:keymap_plain.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:keymap_plain.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:keymap_plain.c **** GNU General Public License for more details.
  13:keymap_plain.c **** 
  14:keymap_plain.c **** You should have received a copy of the GNU General Public License
  15:keymap_plain.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:keymap_plain.c **** */
  17:keymap_plain.c **** #include "keymap_common.h"
  18:keymap_plain.c **** 
  19:keymap_plain.c **** const uint8_t PROGMEM keymaps[][MATRIX_ROWS][MATRIX_COLS] = {
  20:keymap_plain.c ****     /* Layer 0: Default Layer
  21:keymap_plain.c ****      * ,-----------------------------.
  22:keymap_plain.c ****      * |Esc |    | ESC| SLS| MUL| MIN|
  23:keymap_plain.c ****      * |-----------------------------|
  24:keymap_plain.c ****      * |FN4 |    |  7 |  8 |  9 |  < |
  25:keymap_plain.c ****      * |-------------------------PLUS|
  26:keymap_plain.c ****      * |FN3 |    |  4 |  5 |  6 |    |
  27:keymap_plain.c ****      * |-----------------------------|
  28:keymap_plain.c ****      * |FN2 |    |  1 |  2 |  3 |  < |
  29:keymap_plain.c ****      * |-------------------------ENTR|
  30:keymap_plain.c ****      * |FN1 |    |  ^ 0    |  . |    |
  31:keymap_plain.c ****      * `-----------------------------'
  32:keymap_plain.c ****      */
  33:keymap_plain.c ****     [0] = KEYMAP( \
  34:keymap_plain.c **** 	ESC, PEQL, PSLS, PAST, PMNS, \
  35:keymap_plain.c **** 	NO, 7, 8, 9, PPLS, \
  36:keymap_plain.c **** 	FN3, 4, 5, 6, \
  37:keymap_plain.c **** 	FN2, 1, 2, 3, PENT,\
  38:keymap_plain.c **** 	FN1, 0, PDOT \
  39:keymap_plain.c ****     ),
  40:keymap_plain.c ****     /* Layer 1: Mouse/Music Layer
  41:keymap_plain.c ****      * ,-----------------------------.
  42:keymap_plain.c ****      * | FN1|    |MNXT|MPRV|MPLY| NO |
  43:keymap_plain.c ****      * |-----------------------------|
  44:keymap_plain.c ****      * |VolU|    | Cl2| MU | Cl1| <  |
  45:keymap_plain.c ****      * |------------------------- NO |
  46:keymap_plain.c ****      * |VolD|    | ML | MD | MR |    |
  47:keymap_plain.c ****      * |-----------------------------|
  48:keymap_plain.c ****      * |MUTE|    | WU | WL | WD |  < |
  49:keymap_plain.c ****      * |------------------------- NO |
  50:keymap_plain.c ****      * | NO |    |  ^ NO   | NO |    |
  51:keymap_plain.c ****      * `-----------------------------'
  52:keymap_plain.c ****      */
  53:keymap_plain.c ****     [1] = KEYMAP( \
  54:keymap_plain.c **** 	FN1, MNXT, MPRV, MPLY, NO, \
  55:keymap_plain.c **** 	VOLU, BTN1, MS_U, BTN2, NO, \
  56:keymap_plain.c **** 	VOLD, MS_L, MS_D, MS_R, \
  57:keymap_plain.c **** 	MUTE, WH_U, WH_L, WH_D, NO,\
  58:keymap_plain.c **** 	NO, NO, NO \
  59:keymap_plain.c ****     ),
  60:keymap_plain.c ****     /* Layer 2: Arrow Layer
  61:keymap_plain.c ****      * ,-----------------------------.
  62:keymap_plain.c ****      * |FN2 |    | ESC| NO | NO | NO |
  63:keymap_plain.c ****      * |-----------------------------|
  64:keymap_plain.c ****      * | NO |    |  Y | AU |  P | <  |
  65:keymap_plain.c ****      * |------------------------- NO |
  66:keymap_plain.c ****      * | NO |    | AL | AD | AR |    |
  67:keymap_plain.c ****      * |-----------------------------|
  68:keymap_plain.c ****      * | NO |    | NO | NO | NO |  < |
  69:keymap_plain.c ****      * |-------------------------ENTR|
  70:keymap_plain.c ****      * | NO |    |  ^ NO   | NO |    |
  71:keymap_plain.c ****      * `-----------------------------'
  72:keymap_plain.c ****      */
  73:keymap_plain.c ****     [2] = KEYMAP( \
  74:keymap_plain.c **** 	FN2, ESC, NO, NO, NO, \
  75:keymap_plain.c **** 	NO, Y, UP, P, NO, \
  76:keymap_plain.c **** 	NO, LEFT, DOWN, RIGHT, \
  77:keymap_plain.c **** 	NO, NO, NO, NO, PENT,\
  78:keymap_plain.c **** 	NO, NO, NO \
  79:keymap_plain.c ****     ),
  80:keymap_plain.c ****     /* Layer 3: MACRO Layer
  81:keymap_plain.c ****      * ,-----------------------------.
  82:keymap_plain.c ****      * |FN3 |    |GINK|DESC|CONT| IT |
  83:keymap_plain.c ****      * |-----------------------------|
  84:keymap_plain.c ****      * | NO |    | NO | NO | NO | <  |
  85:keymap_plain.c ****      * |------------------------- NO |
  86:keymap_plain.c ****      * | NO |    | NO | NO | NO |    |
  87:keymap_plain.c ****      * |-----------------------------|
  88:keymap_plain.c ****      * | NO |    | NO | NO | NO |  < |
  89:keymap_plain.c ****      * |------------------------- NO |
  90:keymap_plain.c ****      * | NO |    |  ^ NO   | NO |    |
  91:keymap_plain.c ****      * `-----------------------------'
  92:keymap_plain.c ****      */
  93:keymap_plain.c ****     [3] = KEYMAP( \
  94:keymap_plain.c **** 	FN3, FN4, FN5, FN6, FN7, \
  95:keymap_plain.c **** 	NO, NO, NO, NO, NO, \
  96:keymap_plain.c **** 	NO, NO, NO, NO, \
  97:keymap_plain.c **** 	NO, NO, NO, NO, NO,\
  98:keymap_plain.c **** 	NO, NO, NO \
  99:keymap_plain.c ****     ),
 100:keymap_plain.c **** };
 101:keymap_plain.c **** 
 102:keymap_plain.c **** const action_t PROGMEM fn_actions[] = {
 103:keymap_plain.c ****     [0] = ACTION_LAYER_TOGGLE(0),
 104:keymap_plain.c ****     [1] = ACTION_LAYER_TOGGLE(1),
 105:keymap_plain.c ****     [2] = ACTION_LAYER_TOGGLE(2),
 106:keymap_plain.c ****     [3] = ACTION_LAYER_TOGGLE(3),
 107:keymap_plain.c ****     [4] = ACTION_MACRO(0), // ginkgo -r -race -untilItFails -randomizeAllSpecs
 108:keymap_plain.c ****     [5] = ACTION_MACRO(1), // Describe Block
 109:keymap_plain.c ****     [6] = ACTION_MACRO(2), // Context Block
 110:keymap_plain.c ****     [7] = ACTION_MACRO(3)  // It Block
 111:keymap_plain.c **** };
 112:keymap_plain.c **** 
 113:keymap_plain.c **** const macro_t *action_get_macro(keyrecord_t *record, uint8_t id, uint8_t opt) {
  16               		.loc 1 113 0
  17               		.cfi_startproc
  18               	.LVL0:
  19               	/* prologue: function */
  20               	/* frame size = 0 */
  21               	/* stack size = 0 */
  22               	.L__stack_usage = 0
 114:keymap_plain.c ****     if (record->event.pressed) {
  23               		.loc 1 114 0
  24 0000 FC01      		movw r30,r24
  25 0002 8281      		ldd r24,Z+2
  26               	.LVL1:
  27 0004 8823      		tst r24
  28 0006 01F0      		breq .L7
 115:keymap_plain.c ****         switch (id) {
  29               		.loc 1 115 0
  30 0008 6130      		cpi r22,lo8(1)
  31 000a 01F0      		breq .L4
  32 000c 00F0      		brlo .L8
  33 000e 6230      		cpi r22,lo8(2)
  34 0010 01F0      		breq .L5
  35 0012 6330      		cpi r22,lo8(3)
  36 0014 01F4      		brne .L7
 116:keymap_plain.c **** 	    case 0:
 117:keymap_plain.c **** 	        return MACRO( \
 118:keymap_plain.c **** 			    T(G), T(I), T(N), T(K), T(G), T(O), T(SPACE), \
 119:keymap_plain.c **** 			    T(MINS), T(R), T(SPACE), \
 120:keymap_plain.c **** 			    T(MINS), T(R), T(A), T(C), T(E), T(SPACE), \
 121:keymap_plain.c **** 			    T(MINS), T(U), T(N), T(T), T(I), T(L), \
 122:keymap_plain.c **** 			    D(LSFT), T(I), U(LSFT), T(T), \
 123:keymap_plain.c **** 			    D(LSFT), T(F), U(LSFT), T(A), T(I), T(L), T(S), T(SPACE), \
 124:keymap_plain.c **** 			    T(MINS), T(R), T(A), T(N), T(D), T(O), T(M), T(I), T(Z), T(E), \
 125:keymap_plain.c **** 			    D(LSFT), T(A), U(LSFT), T(L), T(L), \
 126:keymap_plain.c **** 			    D(LSFT), T(S), U(LSFT), T(P), T(E), T(C), T(S), T(ENT), END \
 127:keymap_plain.c **** 			    );
 128:keymap_plain.c ****             case 1:
 129:keymap_plain.c ****                 return MACRO( \
 130:keymap_plain.c **** 			    T(O), \
 131:keymap_plain.c **** 			    D(LSFT), T(D), U(LSFT), T(E), T(S), T(C), T(R), T(I), T(B), T(E), \
 132:keymap_plain.c **** 			    T(SPACE), T(ESC), END \
 133:keymap_plain.c **** 			    );
 134:keymap_plain.c ****             case 2:
 135:keymap_plain.c ****                 return MACRO( \
 136:keymap_plain.c **** 			    T(O), \
 137:keymap_plain.c **** 			    D(LSFT), T(C), U(LSFT), T(O), T(N), T(T), T(E), T(X), T(T), \
 138:keymap_plain.c **** 			    T(SPACE), T(ESC), END \
 139:keymap_plain.c **** 	                    );
 140:keymap_plain.c ****             case 3:
 141:keymap_plain.c ****                 return MACRO( \
  37               		.loc 1 141 0
  38 0016 80E0      		ldi r24,lo8(__m.4697)
  39 0018 90E0      		ldi r25,hi8(__m.4697)
  40 001a 0895      		ret
  41               	.L4:
 129:keymap_plain.c **** 			    T(O), \
  42               		.loc 1 129 0
  43 001c 80E0      		ldi r24,lo8(__m.4691)
  44 001e 90E0      		ldi r25,hi8(__m.4691)
  45 0020 0895      		ret
  46               	.L5:
 135:keymap_plain.c **** 			    T(O), \
  47               		.loc 1 135 0
  48 0022 80E0      		ldi r24,lo8(__m.4694)
  49 0024 90E0      		ldi r25,hi8(__m.4694)
  50 0026 0895      		ret
  51               	.L7:
 142:keymap_plain.c **** 			    T(O), \
 143:keymap_plain.c **** 			    D(LSFT), T(I), U(LSFT), T(T), T(SPACE), T(ESC), END \
 144:keymap_plain.c **** 			    );
 145:keymap_plain.c ****         }
 146:keymap_plain.c ****     }
 147:keymap_plain.c ****     return MACRO_NONE;
  52               		.loc 1 147 0
  53 0028 80E0      		ldi r24,0
  54 002a 90E0      		ldi r25,0
  55 002c 0895      		ret
  56               	.L8:
 117:keymap_plain.c **** 			    T(G), T(I), T(N), T(K), T(G), T(O), T(SPACE), \
  57               		.loc 1 117 0
  58 002e 80E0      		ldi r24,lo8(__m.4688)
  59 0030 90E0      		ldi r25,hi8(__m.4688)
 148:keymap_plain.c **** }
  60               		.loc 1 148 0
  61 0032 0895      		ret
  62               		.cfi_endproc
  63               	.LFE103:
  65               		.section	.progmem.data.__m.4697,"a",@progbits
  68               	__m.4697:
  69 0000 01        		.byte	1
  70 0001 12        		.byte	18
  71 0002 02        		.byte	2
  72 0003 12        		.byte	18
  73 0004 01        		.byte	1
  74 0005 E1        		.byte	-31
  75 0006 01        		.byte	1
  76 0007 0C        		.byte	12
  77 0008 02        		.byte	2
  78 0009 0C        		.byte	12
  79 000a 02        		.byte	2
  80 000b E1        		.byte	-31
  81 000c 01        		.byte	1
  82 000d 17        		.byte	23
  83 000e 02        		.byte	2
  84 000f 17        		.byte	23
  85 0010 01        		.byte	1
  86 0011 2C        		.byte	44
  87 0012 02        		.byte	2
  88 0013 2C        		.byte	44
  89 0014 01        		.byte	1
  90 0015 29        		.byte	41
  91 0016 02        		.byte	2
  92 0017 29        		.byte	41
  93 0018 00        		.byte	0
  94               		.section	.progmem.data.__m.4694,"a",@progbits
  97               	__m.4694:
  98 0000 01        		.byte	1
  99 0001 12        		.byte	18
 100 0002 02        		.byte	2
 101 0003 12        		.byte	18
 102 0004 01        		.byte	1
 103 0005 E1        		.byte	-31
 104 0006 01        		.byte	1
 105 0007 06        		.byte	6
 106 0008 02        		.byte	2
 107 0009 06        		.byte	6
 108 000a 02        		.byte	2
 109 000b E1        		.byte	-31
 110 000c 01        		.byte	1
 111 000d 12        		.byte	18
 112 000e 02        		.byte	2
 113 000f 12        		.byte	18
 114 0010 01        		.byte	1
 115 0011 11        		.byte	17
 116 0012 02        		.byte	2
 117 0013 11        		.byte	17
 118 0014 01        		.byte	1
 119 0015 17        		.byte	23
 120 0016 02        		.byte	2
 121 0017 17        		.byte	23
 122 0018 01        		.byte	1
 123 0019 08        		.byte	8
 124 001a 02        		.byte	2
 125 001b 08        		.byte	8
 126 001c 01        		.byte	1
 127 001d 1B        		.byte	27
 128 001e 02        		.byte	2
 129 001f 1B        		.byte	27
 130 0020 01        		.byte	1
 131 0021 17        		.byte	23
 132 0022 02        		.byte	2
 133 0023 17        		.byte	23
 134 0024 01        		.byte	1
 135 0025 2C        		.byte	44
 136 0026 02        		.byte	2
 137 0027 2C        		.byte	44
 138 0028 01        		.byte	1
 139 0029 29        		.byte	41
 140 002a 02        		.byte	2
 141 002b 29        		.byte	41
 142 002c 00        		.byte	0
 143               		.section	.progmem.data.__m.4691,"a",@progbits
 146               	__m.4691:
 147 0000 01        		.byte	1
 148 0001 12        		.byte	18
 149 0002 02        		.byte	2
 150 0003 12        		.byte	18
 151 0004 01        		.byte	1
 152 0005 E1        		.byte	-31
 153 0006 01        		.byte	1
 154 0007 07        		.byte	7
 155 0008 02        		.byte	2
 156 0009 07        		.byte	7
 157 000a 02        		.byte	2
 158 000b E1        		.byte	-31
 159 000c 01        		.byte	1
 160 000d 08        		.byte	8
 161 000e 02        		.byte	2
 162 000f 08        		.byte	8
 163 0010 01        		.byte	1
 164 0011 16        		.byte	22
 165 0012 02        		.byte	2
 166 0013 16        		.byte	22
 167 0014 01        		.byte	1
 168 0015 06        		.byte	6
 169 0016 02        		.byte	2
 170 0017 06        		.byte	6
 171 0018 01        		.byte	1
 172 0019 15        		.byte	21
 173 001a 02        		.byte	2
 174 001b 15        		.byte	21
 175 001c 01        		.byte	1
 176 001d 0C        		.byte	12
 177 001e 02        		.byte	2
 178 001f 0C        		.byte	12
 179 0020 01        		.byte	1
 180 0021 05        		.byte	5
 181 0022 02        		.byte	2
 182 0023 05        		.byte	5
 183 0024 01        		.byte	1
 184 0025 08        		.byte	8
 185 0026 02        		.byte	2
 186 0027 08        		.byte	8
 187 0028 01        		.byte	1
 188 0029 2C        		.byte	44
 189 002a 02        		.byte	2
 190 002b 2C        		.byte	44
 191 002c 01        		.byte	1
 192 002d 29        		.byte	41
 193 002e 02        		.byte	2
 194 002f 29        		.byte	41
 195 0030 00        		.byte	0
 196               		.section	.progmem.data.__m.4688,"a",@progbits
 199               	__m.4688:
 200 0000 01        		.byte	1
 201 0001 0A        		.byte	10
 202 0002 02        		.byte	2
 203 0003 0A        		.byte	10
 204 0004 01        		.byte	1
 205 0005 0C        		.byte	12
 206 0006 02        		.byte	2
 207 0007 0C        		.byte	12
 208 0008 01        		.byte	1
 209 0009 11        		.byte	17
 210 000a 02        		.byte	2
 211 000b 11        		.byte	17
 212 000c 01        		.byte	1
 213 000d 0E        		.byte	14
 214 000e 02        		.byte	2
 215 000f 0E        		.byte	14
 216 0010 01        		.byte	1
 217 0011 0A        		.byte	10
 218 0012 02        		.byte	2
 219 0013 0A        		.byte	10
 220 0014 01        		.byte	1
 221 0015 12        		.byte	18
 222 0016 02        		.byte	2
 223 0017 12        		.byte	18
 224 0018 01        		.byte	1
 225 0019 2C        		.byte	44
 226 001a 02        		.byte	2
 227 001b 2C        		.byte	44
 228 001c 01        		.byte	1
 229 001d 2D        		.byte	45
 230 001e 02        		.byte	2
 231 001f 2D        		.byte	45
 232 0020 01        		.byte	1
 233 0021 15        		.byte	21
 234 0022 02        		.byte	2
 235 0023 15        		.byte	21
 236 0024 01        		.byte	1
 237 0025 2C        		.byte	44
 238 0026 02        		.byte	2
 239 0027 2C        		.byte	44
 240 0028 01        		.byte	1
 241 0029 2D        		.byte	45
 242 002a 02        		.byte	2
 243 002b 2D        		.byte	45
 244 002c 01        		.byte	1
 245 002d 15        		.byte	21
 246 002e 02        		.byte	2
 247 002f 15        		.byte	21
 248 0030 01        		.byte	1
 249 0031 04        		.byte	4
 250 0032 02        		.byte	2
 251 0033 04        		.byte	4
 252 0034 01        		.byte	1
 253 0035 06        		.byte	6
 254 0036 02        		.byte	2
 255 0037 06        		.byte	6
 256 0038 01        		.byte	1
 257 0039 08        		.byte	8
 258 003a 02        		.byte	2
 259 003b 08        		.byte	8
 260 003c 01        		.byte	1
 261 003d 2C        		.byte	44
 262 003e 02        		.byte	2
 263 003f 2C        		.byte	44
 264 0040 01        		.byte	1
 265 0041 2D        		.byte	45
 266 0042 02        		.byte	2
 267 0043 2D        		.byte	45
 268 0044 01        		.byte	1
 269 0045 18        		.byte	24
 270 0046 02        		.byte	2
 271 0047 18        		.byte	24
 272 0048 01        		.byte	1
 273 0049 11        		.byte	17
 274 004a 02        		.byte	2
 275 004b 11        		.byte	17
 276 004c 01        		.byte	1
 277 004d 17        		.byte	23
 278 004e 02        		.byte	2
 279 004f 17        		.byte	23
 280 0050 01        		.byte	1
 281 0051 0C        		.byte	12
 282 0052 02        		.byte	2
 283 0053 0C        		.byte	12
 284 0054 01        		.byte	1
 285 0055 0F        		.byte	15
 286 0056 02        		.byte	2
 287 0057 0F        		.byte	15
 288 0058 01        		.byte	1
 289 0059 E1        		.byte	-31
 290 005a 01        		.byte	1
 291 005b 0C        		.byte	12
 292 005c 02        		.byte	2
 293 005d 0C        		.byte	12
 294 005e 02        		.byte	2
 295 005f E1        		.byte	-31
 296 0060 01        		.byte	1
 297 0061 17        		.byte	23
 298 0062 02        		.byte	2
 299 0063 17        		.byte	23
 300 0064 01        		.byte	1
 301 0065 E1        		.byte	-31
 302 0066 01        		.byte	1
 303 0067 09        		.byte	9
 304 0068 02        		.byte	2
 305 0069 09        		.byte	9
 306 006a 02        		.byte	2
 307 006b E1        		.byte	-31
 308 006c 01        		.byte	1
 309 006d 04        		.byte	4
 310 006e 02        		.byte	2
 311 006f 04        		.byte	4
 312 0070 01        		.byte	1
 313 0071 0C        		.byte	12
 314 0072 02        		.byte	2
 315 0073 0C        		.byte	12
 316 0074 01        		.byte	1
 317 0075 0F        		.byte	15
 318 0076 02        		.byte	2
 319 0077 0F        		.byte	15
 320 0078 01        		.byte	1
 321 0079 16        		.byte	22
 322 007a 02        		.byte	2
 323 007b 16        		.byte	22
 324 007c 01        		.byte	1
 325 007d 2C        		.byte	44
 326 007e 02        		.byte	2
 327 007f 2C        		.byte	44
 328 0080 01        		.byte	1
 329 0081 2D        		.byte	45
 330 0082 02        		.byte	2
 331 0083 2D        		.byte	45
 332 0084 01        		.byte	1
 333 0085 15        		.byte	21
 334 0086 02        		.byte	2
 335 0087 15        		.byte	21
 336 0088 01        		.byte	1
 337 0089 04        		.byte	4
 338 008a 02        		.byte	2
 339 008b 04        		.byte	4
 340 008c 01        		.byte	1
 341 008d 11        		.byte	17
 342 008e 02        		.byte	2
 343 008f 11        		.byte	17
 344 0090 01        		.byte	1
 345 0091 07        		.byte	7
 346 0092 02        		.byte	2
 347 0093 07        		.byte	7
 348 0094 01        		.byte	1
 349 0095 12        		.byte	18
 350 0096 02        		.byte	2
 351 0097 12        		.byte	18
 352 0098 01        		.byte	1
 353 0099 10        		.byte	16
 354 009a 02        		.byte	2
 355 009b 10        		.byte	16
 356 009c 01        		.byte	1
 357 009d 0C        		.byte	12
 358 009e 02        		.byte	2
 359 009f 0C        		.byte	12
 360 00a0 01        		.byte	1
 361 00a1 1D        		.byte	29
 362 00a2 02        		.byte	2
 363 00a3 1D        		.byte	29
 364 00a4 01        		.byte	1
 365 00a5 08        		.byte	8
 366 00a6 02        		.byte	2
 367 00a7 08        		.byte	8
 368 00a8 01        		.byte	1
 369 00a9 E1        		.byte	-31
 370 00aa 01        		.byte	1
 371 00ab 04        		.byte	4
 372 00ac 02        		.byte	2
 373 00ad 04        		.byte	4
 374 00ae 02        		.byte	2
 375 00af E1        		.byte	-31
 376 00b0 01        		.byte	1
 377 00b1 0F        		.byte	15
 378 00b2 02        		.byte	2
 379 00b3 0F        		.byte	15
 380 00b4 01        		.byte	1
 381 00b5 0F        		.byte	15
 382 00b6 02        		.byte	2
 383 00b7 0F        		.byte	15
 384 00b8 01        		.byte	1
 385 00b9 E1        		.byte	-31
 386 00ba 01        		.byte	1
 387 00bb 16        		.byte	22
 388 00bc 02        		.byte	2
 389 00bd 16        		.byte	22
 390 00be 02        		.byte	2
 391 00bf E1        		.byte	-31
 392 00c0 01        		.byte	1
 393 00c1 13        		.byte	19
 394 00c2 02        		.byte	2
 395 00c3 13        		.byte	19
 396 00c4 01        		.byte	1
 397 00c5 08        		.byte	8
 398 00c6 02        		.byte	2
 399 00c7 08        		.byte	8
 400 00c8 01        		.byte	1
 401 00c9 06        		.byte	6
 402 00ca 02        		.byte	2
 403 00cb 06        		.byte	6
 404 00cc 01        		.byte	1
 405 00cd 16        		.byte	22
 406 00ce 02        		.byte	2
 407 00cf 16        		.byte	22
 408 00d0 01        		.byte	1
 409 00d1 28        		.byte	40
 410 00d2 02        		.byte	2
 411 00d3 28        		.byte	40
 412 00d4 00        		.byte	0
 413               	.global	fn_actions
 414               		.section	.progmem.data.fn_actions,"a",@progbits
 417               	fn_actions:
 418 0000 018A      		.word	-30207
 419 0002 028A      		.word	-30206
 420 0004 048A      		.word	-30204
 421 0006 088A      		.word	-30200
 422 0008 00C0      		.word	-16384
 423 000a 01C0      		.word	-16383
 424 000c 02C0      		.word	-16382
 425 000e 03C0      		.word	-16381
 426               	.global	keymaps
 427               		.section	.progmem.data.keymaps,"a",@progbits
 430               	keymaps:
 431 0000 29        		.byte	41
 432 0001 67        		.byte	103
 433 0002 54        		.byte	84
 434 0003 55        		.byte	85
 435 0004 56        		.byte	86
 436 0005 00        		.byte	0
 437 0006 24        		.byte	36
 438 0007 25        		.byte	37
 439 0008 26        		.byte	38
 440 0009 57        		.byte	87
 441 000a C3        		.byte	-61
 442 000b 21        		.byte	33
 443 000c 22        		.byte	34
 444 000d 23        		.byte	35
 445 000e 00        		.byte	0
 446 000f C2        		.byte	-62
 447 0010 1E        		.byte	30
 448 0011 1F        		.byte	31
 449 0012 20        		.byte	32
 450 0013 58        		.byte	88
 451 0014 C1        		.byte	-63
 452 0015 27        		.byte	39
 453 0016 00        		.byte	0
 454 0017 63        		.byte	99
 455 0018 00        		.byte	0
 456 0019 C1        		.byte	-63
 457 001a AB        		.byte	-85
 458 001b AC        		.byte	-84
 459 001c B0        		.byte	-80
 460 001d 00        		.byte	0
 461 001e A9        		.byte	-87
 462 001f F4        		.byte	-12
 463 0020 F0        		.byte	-16
 464 0021 F5        		.byte	-11
 465 0022 00        		.byte	0
 466 0023 AA        		.byte	-86
 467 0024 F2        		.byte	-14
 468 0025 F1        		.byte	-15
 469 0026 F3        		.byte	-13
 470 0027 00        		.byte	0
 471 0028 A8        		.byte	-88
 472 0029 F9        		.byte	-7
 473 002a FB        		.byte	-5
 474 002b FA        		.byte	-6
 475 002c 00        		.byte	0
 476 002d 00        		.byte	0
 477 002e 00        		.byte	0
 478 002f 00        		.byte	0
 479 0030 00        		.byte	0
 480 0031 00        		.byte	0
 481 0032 C2        		.byte	-62
 482 0033 29        		.byte	41
 483 0034 00        		.byte	0
 484 0035 00        		.byte	0
 485 0036 00        		.byte	0
 486 0037 00        		.byte	0
 487 0038 1C        		.byte	28
 488 0039 52        		.byte	82
 489 003a 13        		.byte	19
 490 003b 00        		.byte	0
 491 003c 00        		.byte	0
 492 003d 50        		.byte	80
 493 003e 51        		.byte	81
 494 003f 4F        		.byte	79
 495 0040 00        		.byte	0
 496 0041 00        		.byte	0
 497 0042 00        		.byte	0
 498 0043 00        		.byte	0
 499 0044 00        		.byte	0
 500 0045 58        		.byte	88
 501 0046 00        		.byte	0
 502 0047 00        		.byte	0
 503 0048 00        		.byte	0
 504 0049 00        		.byte	0
 505 004a 00        		.byte	0
 506 004b C3        		.byte	-61
 507 004c C4        		.byte	-60
 508 004d C5        		.byte	-59
 509 004e C6        		.byte	-58
 510 004f C7        		.byte	-57
 511 0050 00        		.byte	0
 512 0051 00        		.byte	0
 513 0052 00        		.byte	0
 514 0053 00        		.byte	0
 515 0054 00        		.byte	0
 516 0055 00        		.byte	0
 517 0056 00        		.byte	0
 518 0057 00        		.byte	0
 519 0058 00        		.byte	0
 520 0059 00        		.byte	0
 521 005a 00        		.byte	0
 522 005b 00        		.byte	0
 523 005c 00        		.byte	0
 524 005d 00        		.byte	0
 525 005e 00        		.byte	0
 526 005f 00        		.byte	0
 527 0060 00        		.byte	0
 528 0061 00        		.byte	0
 529 0062 00        		.byte	0
 530 0063 00        		.byte	0
 531               		.text
 532               	.Letext0:
 533               		.file 2 "/usr/lib/avr/include/stdint.h"
 534               		.file 3 "../../tmk_core/common/keycode.h"
 535               		.file 4 "../../tmk_core/common/keyboard.h"
 536               		.file 5 "../../tmk_core/common/action_code.h"
 537               		.file 6 "../../tmk_core/common/action_macro.h"
 538               		.file 7 "../../tmk_core/common/action.h"
 539               		.file 8 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keymap_plain.c
     /tmp/ccBwIThY.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccBwIThY.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccBwIThY.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccBwIThY.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccBwIThY.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccBwIThY.s:13     .text.action_get_macro:0000000000000000 action_get_macro
     /tmp/ccBwIThY.s:68     .progmem.data.__m.4697:0000000000000000 __m.4697
     /tmp/ccBwIThY.s:146    .progmem.data.__m.4691:0000000000000000 __m.4691
     /tmp/ccBwIThY.s:97     .progmem.data.__m.4694:0000000000000000 __m.4694
     /tmp/ccBwIThY.s:199    .progmem.data.__m.4688:0000000000000000 __m.4688
     /tmp/ccBwIThY.s:417    .progmem.data.fn_actions:0000000000000000 fn_actions
     /tmp/ccBwIThY.s:430    .progmem.data.keymaps:0000000000000000 keymaps

NO UNDEFINED SYMBOLS
