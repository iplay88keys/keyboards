   1               		.file	"keyboard.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               		.section	.text.matrix_setup,"ax",@progbits
  11               		.weak	matrix_setup
  13               	matrix_setup:
  14               	.LFB103:
  15               		.file 1 "../../tmk_core/common/keyboard.c"
   1:../../tmk_core/common/keyboard.c **** /*
   2:../../tmk_core/common/keyboard.c **** Copyright 2011,2012,2013 Jun Wako <wakojun@gmail.com>
   3:../../tmk_core/common/keyboard.c **** 
   4:../../tmk_core/common/keyboard.c **** This program is free software: you can redistribute it and/or modify
   5:../../tmk_core/common/keyboard.c **** it under the terms of the GNU General Public License as published by
   6:../../tmk_core/common/keyboard.c **** the Free Software Foundation, either version 2 of the License, or
   7:../../tmk_core/common/keyboard.c **** (at your option) any later version.
   8:../../tmk_core/common/keyboard.c **** 
   9:../../tmk_core/common/keyboard.c **** This program is distributed in the hope that it will be useful,
  10:../../tmk_core/common/keyboard.c **** but WITHOUT ANY WARRANTY; without even the implied warranty of
  11:../../tmk_core/common/keyboard.c **** MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  12:../../tmk_core/common/keyboard.c **** GNU General Public License for more details.
  13:../../tmk_core/common/keyboard.c **** 
  14:../../tmk_core/common/keyboard.c **** You should have received a copy of the GNU General Public License
  15:../../tmk_core/common/keyboard.c **** along with this program.  If not, see <http://www.gnu.org/licenses/>.
  16:../../tmk_core/common/keyboard.c **** */
  17:../../tmk_core/common/keyboard.c **** #include <stdint.h>
  18:../../tmk_core/common/keyboard.c **** #include "keyboard.h"
  19:../../tmk_core/common/keyboard.c **** #include "matrix.h"
  20:../../tmk_core/common/keyboard.c **** #include "keymap.h"
  21:../../tmk_core/common/keyboard.c **** #include "host.h"
  22:../../tmk_core/common/keyboard.c **** #include "led.h"
  23:../../tmk_core/common/keyboard.c **** #include "keycode.h"
  24:../../tmk_core/common/keyboard.c **** #include "timer.h"
  25:../../tmk_core/common/keyboard.c **** #include "print.h"
  26:../../tmk_core/common/keyboard.c **** #include "debug.h"
  27:../../tmk_core/common/keyboard.c **** #include "command.h"
  28:../../tmk_core/common/keyboard.c **** #include "util.h"
  29:../../tmk_core/common/keyboard.c **** #include "sendchar.h"
  30:../../tmk_core/common/keyboard.c **** #include "bootmagic.h"
  31:../../tmk_core/common/keyboard.c **** #include "eeconfig.h"
  32:../../tmk_core/common/keyboard.c **** #include "backlight.h"
  33:../../tmk_core/common/keyboard.c **** #include "hook.h"
  34:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
  35:../../tmk_core/common/keyboard.c **** #   include "mousekey.h"
  36:../../tmk_core/common/keyboard.c **** #endif
  37:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  38:../../tmk_core/common/keyboard.c **** #   include "ps2_mouse.h"
  39:../../tmk_core/common/keyboard.c **** #endif
  40:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  41:../../tmk_core/common/keyboard.c **** #include "serial_mouse.h"
  42:../../tmk_core/common/keyboard.c **** #endif
  43:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  44:../../tmk_core/common/keyboard.c **** #include "adb.h"
  45:../../tmk_core/common/keyboard.c **** #endif
  46:../../tmk_core/common/keyboard.c **** 
  47:../../tmk_core/common/keyboard.c **** 
  48:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
  49:../../tmk_core/common/keyboard.c **** static bool has_ghost_in_row(uint8_t row)
  50:../../tmk_core/common/keyboard.c **** {
  51:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = matrix_get_row(row);
  52:../../tmk_core/common/keyboard.c ****     // No ghost exists when less than 2 keys are down on the row
  53:../../tmk_core/common/keyboard.c ****     if (((matrix_row - 1) & matrix_row) == 0)
  54:../../tmk_core/common/keyboard.c ****         return false;
  55:../../tmk_core/common/keyboard.c **** 
  56:../../tmk_core/common/keyboard.c ****     // Ghost occurs when the row shares column line with other row
  57:../../tmk_core/common/keyboard.c ****     for (uint8_t i=0; i < MATRIX_ROWS; i++) {
  58:../../tmk_core/common/keyboard.c ****         if (i != row && (matrix_get_row(i) & matrix_row))
  59:../../tmk_core/common/keyboard.c ****             return true;
  60:../../tmk_core/common/keyboard.c ****     }
  61:../../tmk_core/common/keyboard.c ****     return false;
  62:../../tmk_core/common/keyboard.c **** }
  63:../../tmk_core/common/keyboard.c **** #endif
  64:../../tmk_core/common/keyboard.c **** 
  65:../../tmk_core/common/keyboard.c **** 
  66:../../tmk_core/common/keyboard.c **** __attribute__ ((weak)) void matrix_setup(void) {}
  16               		.loc 1 66 0
  17               		.cfi_startproc
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  22 0000 0895      		ret
  23               		.cfi_endproc
  24               	.LFE103:
  26               		.section	.text.keyboard_setup,"ax",@progbits
  27               	.global	keyboard_setup
  29               	keyboard_setup:
  30               	.LFB104:
  67:../../tmk_core/common/keyboard.c **** void keyboard_setup(void)
  68:../../tmk_core/common/keyboard.c **** {
  31               		.loc 1 68 0
  32               		.cfi_startproc
  33               	/* prologue: function */
  34               	/* frame size = 0 */
  35               	/* stack size = 0 */
  36               	.L__stack_usage = 0
  69:../../tmk_core/common/keyboard.c ****     matrix_setup();
  37               		.loc 1 69 0
  38 0000 0C94 0000 		jmp matrix_setup
  39               	.LVL0:
  40               		.cfi_endproc
  41               	.LFE104:
  43               		.section	.text.keyboard_init,"ax",@progbits
  44               	.global	keyboard_init
  46               	keyboard_init:
  47               	.LFB105:
  70:../../tmk_core/common/keyboard.c **** }
  71:../../tmk_core/common/keyboard.c **** 
  72:../../tmk_core/common/keyboard.c **** void keyboard_init(void)
  73:../../tmk_core/common/keyboard.c **** {
  48               		.loc 1 73 0
  49               		.cfi_startproc
  50               	/* prologue: function */
  51               	/* frame size = 0 */
  52               	/* stack size = 0 */
  53               	.L__stack_usage = 0
  74:../../tmk_core/common/keyboard.c ****     timer_init();
  54               		.loc 1 74 0
  55 0000 0E94 0000 		call timer_init
  56               	.LVL1:
  75:../../tmk_core/common/keyboard.c ****     matrix_init();
  57               		.loc 1 75 0
  58 0004 0E94 0000 		call matrix_init
  59               	.LVL2:
  76:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
  77:../../tmk_core/common/keyboard.c ****     ps2_mouse_init();
  78:../../tmk_core/common/keyboard.c **** #endif
  79:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
  80:../../tmk_core/common/keyboard.c ****     serial_mouse_init();
  81:../../tmk_core/common/keyboard.c **** #endif
  82:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
  83:../../tmk_core/common/keyboard.c ****     adb_mouse_init();
  84:../../tmk_core/common/keyboard.c **** #endif
  85:../../tmk_core/common/keyboard.c **** 
  86:../../tmk_core/common/keyboard.c **** 
  87:../../tmk_core/common/keyboard.c **** #ifdef BOOTMAGIC_ENABLE
  88:../../tmk_core/common/keyboard.c ****     bootmagic();
  60               		.loc 1 88 0
  61 0008 0C94 0000 		jmp bootmagic
  62               	.LVL3:
  63               		.cfi_endproc
  64               	.LFE105:
  66               		.section	.text.keyboard_task,"ax",@progbits
  67               	.global	keyboard_task
  69               	keyboard_task:
  70               	.LFB106:
  89:../../tmk_core/common/keyboard.c **** #endif
  90:../../tmk_core/common/keyboard.c **** 
  91:../../tmk_core/common/keyboard.c **** #ifdef BACKLIGHT_ENABLE
  92:../../tmk_core/common/keyboard.c ****     backlight_init();
  93:../../tmk_core/common/keyboard.c **** #endif
  94:../../tmk_core/common/keyboard.c **** }
  95:../../tmk_core/common/keyboard.c **** 
  96:../../tmk_core/common/keyboard.c **** /*
  97:../../tmk_core/common/keyboard.c ****  * Do keyboard routine jobs: scan mantrix, light LEDs, ...
  98:../../tmk_core/common/keyboard.c ****  * This is repeatedly called as fast as possible.
  99:../../tmk_core/common/keyboard.c ****  */
 100:../../tmk_core/common/keyboard.c **** void keyboard_task(void)
 101:../../tmk_core/common/keyboard.c **** {
  71               		.loc 1 101 0
  72               		.cfi_startproc
  73 0000 CF92      		push r12
  74               	.LCFI0:
  75               		.cfi_def_cfa_offset 3
  76               		.cfi_offset 12, -2
  77 0002 DF92      		push r13
  78               	.LCFI1:
  79               		.cfi_def_cfa_offset 4
  80               		.cfi_offset 13, -3
  81 0004 EF92      		push r14
  82               	.LCFI2:
  83               		.cfi_def_cfa_offset 5
  84               		.cfi_offset 14, -4
  85 0006 FF92      		push r15
  86               	.LCFI3:
  87               		.cfi_def_cfa_offset 6
  88               		.cfi_offset 15, -5
  89 0008 0F93      		push r16
  90               	.LCFI4:
  91               		.cfi_def_cfa_offset 7
  92               		.cfi_offset 16, -6
  93 000a 1F93      		push r17
  94               	.LCFI5:
  95               		.cfi_def_cfa_offset 8
  96               		.cfi_offset 17, -7
  97 000c CF93      		push r28
  98               	.LCFI6:
  99               		.cfi_def_cfa_offset 9
 100               		.cfi_offset 28, -8
 101 000e DF93      		push r29
 102               	.LCFI7:
 103               		.cfi_def_cfa_offset 10
 104               		.cfi_offset 29, -9
 105 0010 00D0      		rcall .
 106 0012 00D0      		rcall .
 107 0014 00D0      		rcall .
 108               	.LCFI8:
 109               		.cfi_def_cfa_offset 16
 110 0016 CDB7      		in r28,__SP_L__
 111 0018 DEB7      		in r29,__SP_H__
 112               	.LCFI9:
 113               		.cfi_def_cfa_register 28
 114               	/* prologue: function */
 115               	/* frame size = 6 */
 116               	/* stack size = 14 */
 117               	.L__stack_usage = 14
 118               	.LVL4:
 102:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_prev[MATRIX_ROWS];
 103:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 104:../../tmk_core/common/keyboard.c ****     static matrix_row_t matrix_ghost[MATRIX_ROWS];
 105:../../tmk_core/common/keyboard.c **** #endif
 106:../../tmk_core/common/keyboard.c ****     static uint8_t led_status = 0;
 107:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_row = 0;
 108:../../tmk_core/common/keyboard.c ****     matrix_row_t matrix_change = 0;
 109:../../tmk_core/common/keyboard.c **** 
 110:../../tmk_core/common/keyboard.c ****     matrix_scan();
 119               		.loc 1 110 0
 120 001a 0E94 0000 		call matrix_scan
 121               	.LVL5:
 122 001e 80E0      		ldi r24,lo8(matrix_prev.4784)
 123 0020 C82E      		mov r12,r24
 124 0022 80E0      		ldi r24,hi8(matrix_prev.4784)
 125 0024 D82E      		mov r13,r24
 126 0026 00E0      		ldi r16,0
 127 0028 10E0      		ldi r17,0
 128               	.LVL6:
 129               	.L6:
 130 002a E02E      		mov r14,r16
 131               	.LVL7:
 132               	.LBB2:
 111:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 112:../../tmk_core/common/keyboard.c ****         matrix_row = matrix_get_row(r);
 133               		.loc 1 112 0
 134 002c 802F      		mov r24,r16
 135 002e 0E94 0000 		call matrix_get_row
 136               	.LVL8:
 113:../../tmk_core/common/keyboard.c ****         matrix_change = matrix_row ^ matrix_prev[r];
 137               		.loc 1 113 0
 138 0032 F601      		movw r30,r12
 139 0034 4191      		ld r20,Z+
 140 0036 6F01      		movw r12,r30
 141 0038 F42E      		mov r15,r20
 142 003a F826      		eor r15,r24
 143               	.LVL9:
 114:../../tmk_core/common/keyboard.c ****         if (matrix_change) {
 144               		.loc 1 114 0
 145 003c 01F4      		brne .L5
 146               	.LVL10:
 147               	.L13:
 148 003e 0F5F      		subi r16,-1
 149 0040 1F4F      		sbci r17,-1
 150               	.LVL11:
 111:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 151               		.loc 1 111 0
 152 0042 0530      		cpi r16,5
 153 0044 1105      		cpc r17,__zero_reg__
 154 0046 01F4      		brne .L6
 155               	.LBE2:
 115:../../tmk_core/common/keyboard.c **** #ifdef MATRIX_HAS_GHOST
 116:../../tmk_core/common/keyboard.c ****             if (has_ghost_in_row(r)) {
 117:../../tmk_core/common/keyboard.c ****                 /* Keep track of whether ghosted status has changed for
 118:../../tmk_core/common/keyboard.c ****                  * debugging. But don't update matrix_prev until un-ghosted, or
 119:../../tmk_core/common/keyboard.c ****                  * the last key would be lost.
 120:../../tmk_core/common/keyboard.c ****                  */
 121:../../tmk_core/common/keyboard.c ****                 if (debug_matrix && matrix_ghost[r] != matrix_row) {
 122:../../tmk_core/common/keyboard.c ****                     matrix_print();
 123:../../tmk_core/common/keyboard.c ****                 }
 124:../../tmk_core/common/keyboard.c ****                 matrix_ghost[r] = matrix_row;
 125:../../tmk_core/common/keyboard.c ****                 continue;
 126:../../tmk_core/common/keyboard.c ****             }
 127:../../tmk_core/common/keyboard.c ****             matrix_ghost[r] = matrix_row;
 128:../../tmk_core/common/keyboard.c **** #endif
 129:../../tmk_core/common/keyboard.c ****             if (debug_matrix) matrix_print();
 130:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 131:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 132:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 133:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 134:../../tmk_core/common/keyboard.c ****                         .pressed = (matrix_row & ((matrix_row_t)1<<c)),
 135:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 136:../../tmk_core/common/keyboard.c ****                     };
 137:../../tmk_core/common/keyboard.c ****                     action_exec(e);
 138:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 139:../../tmk_core/common/keyboard.c ****                     // record a processed key
 140:../../tmk_core/common/keyboard.c ****                     matrix_prev[r] ^= ((matrix_row_t)1<<c);
 141:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 142:../../tmk_core/common/keyboard.c ****                     goto MATRIX_LOOP_END;
 143:../../tmk_core/common/keyboard.c ****                 }
 144:../../tmk_core/common/keyboard.c ****             }
 145:../../tmk_core/common/keyboard.c ****         }
 146:../../tmk_core/common/keyboard.c ****     }
 147:../../tmk_core/common/keyboard.c ****     // call with pseudo tick event when no real key event.
 148:../../tmk_core/common/keyboard.c ****     action_exec(TICK);
 156               		.loc 1 148 0
 157 0048 8FEF      		ldi r24,lo8(-1)
 158 004a 8983      		std Y+1,r24
 159 004c 8A83      		std Y+2,r24
 160 004e 1B82      		std Y+3,__zero_reg__
 161 0050 0E94 0000 		call timer_read
 162               	.LVL12:
 163 0054 8160      		ori r24,1
 164 0056 782F      		mov r23,r24
 165 0058 9D83      		std Y+5,r25
 166 005a 8C83      		std Y+4,r24
 167 005c 4981      		ldd r20,Y+1
 168 005e 5A81      		ldd r21,Y+2
 169 0060 6B81      		ldd r22,Y+3
 170 0062 8D81      		ldd r24,Y+5
 171 0064 0E94 0000 		call action_exec
 172               	.LVL13:
 173 0068 00C0      		rjmp .L11
 174               	.LVL14:
 175               	.L5:
 176               	.LBB5:
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 177               		.loc 1 129 0
 178 006a 9091 0000 		lds r25,debug_config
 179 006e 91FF      		sbrs r25,1
 180 0070 00C0      		rjmp .L8
 129:../../tmk_core/common/keyboard.c ****             for (uint8_t c = 0; c < MATRIX_COLS; c++) {
 181               		.loc 1 129 0 is_stmt 0 discriminator 1
 182 0072 8E83      		std Y+6,r24
 183 0074 0E94 0000 		call matrix_print
 184               	.LVL15:
 185 0078 8E81      		ldd r24,Y+6
 186               	.L8:
 187               	.LVL16:
 188               	.LBE5:
 110:../../tmk_core/common/keyboard.c ****     for (uint8_t r = 0; r < MATRIX_ROWS; r++) {
 189               		.loc 1 110 0 is_stmt 1
 190 007a 20E0      		ldi r18,0
 191 007c 30E0      		ldi r19,0
 192               	.LBB6:
 193               	.LBB3:
 131:../../tmk_core/common/keyboard.c ****                     keyevent_t e = (keyevent_t){
 194               		.loc 1 131 0
 195 007e 4F2D      		mov r20,r15
 196 0080 50E0      		ldi r21,0
 197               	.LVL17:
 198               	.L12:
 199 0082 922F      		mov r25,r18
 200               	.LVL18:
 201 0084 BA01      		movw r22,r20
 202 0086 022E      		mov r0,r18
 203 0088 00C0      		rjmp 2f
 204               		1:
 205 008a 7595      		asr r23
 206 008c 6795      		ror r22
 207               		2:
 208 008e 0A94      		dec r0
 209 0090 02F4      		brpl 1b
 210 0092 60FF      		sbrs r22,0
 211 0094 00C0      		rjmp .L9
 212               	.LBB4:
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 213               		.loc 1 132 0
 214 0096 2983      		std Y+1,r18
 215 0098 EA82      		std Y+2,r14
 134:../../tmk_core/common/keyboard.c ****                         .time = (timer_read() | 1) /* time should not be 0 */
 216               		.loc 1 134 0
 217 009a 21E0      		ldi r18,lo8(1)
 218 009c 30E0      		ldi r19,0
 219               	.LVL19:
 220 009e 6901      		movw r12,r18
 221 00a0 00C0      		rjmp 2f
 222               		1:
 223 00a2 CC0C      		lsl r12
 224 00a4 DD1C      		rol r13
 225               		2:
 226 00a6 9A95      		dec r25
 227 00a8 02F4      		brpl 1b
 228 00aa 90E0      		ldi r25,0
 229 00ac 8C21      		and r24,r12
 230 00ae 9D21      		and r25,r13
 231 00b0 892B      		or r24,r25
 232 00b2 01F4      		brne .L10
 233 00b4 20E0      		ldi r18,0
 234               	.L10:
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 235               		.loc 1 132 0
 236 00b6 2B83      		std Y+3,r18
 135:../../tmk_core/common/keyboard.c ****                     };
 237               		.loc 1 135 0
 238 00b8 0E94 0000 		call timer_read
 239               	.LVL20:
 240 00bc 8160      		ori r24,1
 132:../../tmk_core/common/keyboard.c ****                         .key = (keypos_t){ .row = r, .col = c },
 241               		.loc 1 132 0
 242 00be 782F      		mov r23,r24
 243 00c0 9D83      		std Y+5,r25
 244 00c2 8C83      		std Y+4,r24
 137:../../tmk_core/common/keyboard.c ****                     hook_matrix_change(e);
 245               		.loc 1 137 0
 246 00c4 4981      		ldd r20,Y+1
 247 00c6 5A81      		ldd r21,Y+2
 248 00c8 6B81      		ldd r22,Y+3
 249 00ca 8D81      		ldd r24,Y+5
 250 00cc 0E94 0000 		call action_exec
 251               	.LVL21:
 138:../../tmk_core/common/keyboard.c ****                     // record a processed key
 252               		.loc 1 138 0
 253 00d0 4981      		ldd r20,Y+1
 254 00d2 5A81      		ldd r21,Y+2
 255 00d4 6B81      		ldd r22,Y+3
 256 00d6 7C81      		ldd r23,Y+4
 257 00d8 8D81      		ldd r24,Y+5
 258 00da 0E94 0000 		call hook_matrix_change
 259               	.LVL22:
 140:../../tmk_core/common/keyboard.c ****                     // process a key per task call
 260               		.loc 1 140 0
 261 00de F801      		movw r30,r16
 262 00e0 E050      		subi r30,lo8(-(matrix_prev.4784))
 263 00e2 F040      		sbci r31,hi8(-(matrix_prev.4784))
 264 00e4 8081      		ld r24,Z
 265 00e6 C826      		eor r12,r24
 266 00e8 C082      		st Z,r12
 267 00ea 00C0      		rjmp .L11
 268               	.LVL23:
 269               	.L9:
 270 00ec 2F5F      		subi r18,-1
 271 00ee 3F4F      		sbci r19,-1
 272               	.LVL24:
 273               	.LBE4:
 130:../../tmk_core/common/keyboard.c ****                 if (matrix_change & ((matrix_row_t)1<<c)) {
 274               		.loc 1 130 0 discriminator 2
 275 00f0 2530      		cpi r18,5
 276 00f2 3105      		cpc r19,__zero_reg__
 277 00f4 01F4      		brne .L12
 278 00f6 00C0      		rjmp .L13
 279               	.LVL25:
 280               	.L11:
 281               	.LBE3:
 282               	.LBE6:
 149:../../tmk_core/common/keyboard.c **** 
 150:../../tmk_core/common/keyboard.c **** MATRIX_LOOP_END:
 151:../../tmk_core/common/keyboard.c **** 
 152:../../tmk_core/common/keyboard.c ****     hook_keyboard_loop();
 283               		.loc 1 152 0
 284 00f8 0E94 0000 		call hook_keyboard_loop
 285               	.LVL26:
 153:../../tmk_core/common/keyboard.c **** 
 154:../../tmk_core/common/keyboard.c **** #ifdef MOUSEKEY_ENABLE
 155:../../tmk_core/common/keyboard.c ****     // mousekey repeat & acceleration
 156:../../tmk_core/common/keyboard.c ****     mousekey_task();
 286               		.loc 1 156 0
 287 00fc 0E94 0000 		call mousekey_task
 288               	.LVL27:
 157:../../tmk_core/common/keyboard.c **** #endif
 158:../../tmk_core/common/keyboard.c **** 
 159:../../tmk_core/common/keyboard.c **** #ifdef PS2_MOUSE_ENABLE
 160:../../tmk_core/common/keyboard.c ****     ps2_mouse_task();
 161:../../tmk_core/common/keyboard.c **** #endif
 162:../../tmk_core/common/keyboard.c **** 
 163:../../tmk_core/common/keyboard.c **** #ifdef SERIAL_MOUSE_ENABLE
 164:../../tmk_core/common/keyboard.c ****         serial_mouse_task();
 165:../../tmk_core/common/keyboard.c **** #endif
 166:../../tmk_core/common/keyboard.c **** 
 167:../../tmk_core/common/keyboard.c **** #ifdef ADB_MOUSE_ENABLE
 168:../../tmk_core/common/keyboard.c ****         adb_mouse_task();
 169:../../tmk_core/common/keyboard.c **** #endif
 170:../../tmk_core/common/keyboard.c **** 
 171:../../tmk_core/common/keyboard.c ****     // update LED
 172:../../tmk_core/common/keyboard.c ****     if (led_status != host_keyboard_leds()) {
 289               		.loc 1 172 0
 290 0100 1091 0000 		lds r17,led_status.4785
 291 0104 0E94 0000 		call host_keyboard_leds
 292               	.LVL28:
 293 0108 1817      		cp r17,r24
 294 010a 01F0      		breq .L4
 173:../../tmk_core/common/keyboard.c ****         led_status = host_keyboard_leds();
 295               		.loc 1 173 0
 296 010c 0E94 0000 		call host_keyboard_leds
 297               	.LVL29:
 298 0110 8093 0000 		sts led_status.4785,r24
 174:../../tmk_core/common/keyboard.c ****         if (debug_keyboard) dprintf("LED: %02X\n", led_status);
 299               		.loc 1 174 0
 300 0114 9091 0000 		lds r25,debug_config
 301 0118 92FF      		sbrs r25,2
 302 011a 00C0      		rjmp .L15
 303               		.loc 1 174 0 is_stmt 0 discriminator 1
 304 011c 90FF      		sbrs r25,0
 305 011e 00C0      		rjmp .L15
 306               		.loc 1 174 0 discriminator 2
 307 0120 1F92      		push __zero_reg__
 308 0122 8F93      		push r24
 309 0124 80E0      		ldi r24,lo8(__c.4802)
 310 0126 90E0      		ldi r25,hi8(__c.4802)
 311 0128 9F93      		push r25
 312 012a 8F93      		push r24
 313 012c 0E94 0000 		call __xprintf
 314               	.LVL30:
 315 0130 0F90      		pop __tmp_reg__
 316 0132 0F90      		pop __tmp_reg__
 317 0134 0F90      		pop __tmp_reg__
 318 0136 0F90      		pop __tmp_reg__
 319               	.L15:
 175:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 320               		.loc 1 175 0 is_stmt 1
 321 0138 8091 0000 		lds r24,led_status.4785
 322               	/* epilogue start */
 176:../../tmk_core/common/keyboard.c ****     }
 177:../../tmk_core/common/keyboard.c **** }
 323               		.loc 1 177 0
 324 013c 2696      		adiw r28,6
 325 013e 0FB6      		in __tmp_reg__,__SREG__
 326 0140 F894      		cli
 327 0142 DEBF      		out __SP_H__,r29
 328 0144 0FBE      		out __SREG__,__tmp_reg__
 329 0146 CDBF      		out __SP_L__,r28
 330 0148 DF91      		pop r29
 331 014a CF91      		pop r28
 332 014c 1F91      		pop r17
 333 014e 0F91      		pop r16
 334 0150 FF90      		pop r15
 335               	.LVL31:
 336 0152 EF90      		pop r14
 337 0154 DF90      		pop r13
 338 0156 CF90      		pop r12
 175:../../tmk_core/common/keyboard.c ****         hook_keyboard_leds_change(led_status);
 339               		.loc 1 175 0
 340 0158 0C94 0000 		jmp hook_keyboard_leds_change
 341               	.LVL32:
 342               	.L4:
 343               	/* epilogue start */
 344               		.loc 1 177 0
 345 015c 2696      		adiw r28,6
 346 015e 0FB6      		in __tmp_reg__,__SREG__
 347 0160 F894      		cli
 348 0162 DEBF      		out __SP_H__,r29
 349 0164 0FBE      		out __SREG__,__tmp_reg__
 350 0166 CDBF      		out __SP_L__,r28
 351 0168 DF91      		pop r29
 352 016a CF91      		pop r28
 353 016c 1F91      		pop r17
 354 016e 0F91      		pop r16
 355 0170 FF90      		pop r15
 356               	.LVL33:
 357 0172 EF90      		pop r14
 358 0174 DF90      		pop r13
 359 0176 CF90      		pop r12
 360 0178 0895      		ret
 361               		.cfi_endproc
 362               	.LFE106:
 364               		.section	.text.keyboard_set_leds,"ax",@progbits
 365               	.global	keyboard_set_leds
 367               	keyboard_set_leds:
 368               	.LFB107:
 178:../../tmk_core/common/keyboard.c **** 
 179:../../tmk_core/common/keyboard.c **** void keyboard_set_leds(uint8_t leds)
 180:../../tmk_core/common/keyboard.c **** {
 369               		.loc 1 180 0
 370               		.cfi_startproc
 371               	.LVL34:
 372               	/* prologue: function */
 373               	/* frame size = 0 */
 374               	/* stack size = 0 */
 375               	.L__stack_usage = 0
 181:../../tmk_core/common/keyboard.c ****     led_set(leds);
 376               		.loc 1 181 0
 377 0000 0C94 0000 		jmp led_set
 378               	.LVL35:
 379               		.cfi_endproc
 380               	.LFE107:
 382               		.section	.progmem.data.__c.4802,"a",@progbits
 385               	__c.4802:
 386 0000 4C45 443A 		.string	"LED: %02X\n"
 386      2025 3032 
 386      580A 00
 387               		.section	.bss.led_status.4785,"aw",@nobits
 390               	led_status.4785:
 391 0000 00        		.zero	1
 392               		.section	.bss.matrix_prev.4784,"aw",@nobits
 395               	matrix_prev.4784:
 396 0000 0000 0000 		.zero	5
 396      00
 397               		.text
 398               	.Letext0:
 399               		.file 2 "/usr/lib/avr/include/stdint.h"
 400               		.file 3 "../../tmk_core/common/keyboard.h"
 401               		.file 4 "../../tmk_core/common/matrix.h"
 402               		.file 5 "../../tmk_core/common/debug.h"
 403               		.file 6 "../../tmk_core/protocol/lufa/LUFA-git/LUFA/Drivers/USB/Core/USBTask.h"
 404               		.file 7 "../../tmk_core/common/timer.h"
 405               		.file 8 "../../tmk_core/common/bootmagic.h"
 406               		.file 9 "../../tmk_core/common/action.h"
 407               		.file 10 "../../tmk_core/common/hook.h"
 408               		.file 11 "../../tmk_core/common/mousekey.h"
 409               		.file 12 "../../tmk_core/common/host.h"
 410               		.file 13 "../../tmk_core/common/avr/xprintf.h"
 411               		.file 14 "../../tmk_core/common/led.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 keyboard.c
     /tmp/ccyJ1Dp9.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccyJ1Dp9.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccyJ1Dp9.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccyJ1Dp9.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccyJ1Dp9.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccyJ1Dp9.s:13     .text.matrix_setup:0000000000000000 matrix_setup
     /tmp/ccyJ1Dp9.s:29     .text.keyboard_setup:0000000000000000 keyboard_setup
     /tmp/ccyJ1Dp9.s:46     .text.keyboard_init:0000000000000000 keyboard_init
     /tmp/ccyJ1Dp9.s:69     .text.keyboard_task:0000000000000000 keyboard_task
     /tmp/ccyJ1Dp9.s:395    .bss.matrix_prev.4784:0000000000000000 matrix_prev.4784
     /tmp/ccyJ1Dp9.s:390    .bss.led_status.4785:0000000000000000 led_status.4785
     /tmp/ccyJ1Dp9.s:385    .progmem.data.__c.4802:0000000000000000 __c.4802
     /tmp/ccyJ1Dp9.s:367    .text.keyboard_set_leds:0000000000000000 keyboard_set_leds

UNDEFINED SYMBOLS
timer_init
matrix_init
bootmagic
matrix_scan
matrix_get_row
timer_read
action_exec
debug_config
matrix_print
hook_matrix_change
hook_keyboard_loop
mousekey_task
host_keyboard_leds
__xprintf
hook_keyboard_leds_change
led_set
__do_clear_bss
